import discord
from discord.ext import commands
from discord_components import DiscordComponents, Button, ButtonStyle
from Main import *
import json
import random
import requests


class menu(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def menu(self, ctx):
        author = ctx.message.author
        await ctx.send(
            embed=discord.Embed(title=f'{author}' + ", ""Welcome to the menu!"),
            components=[
                [Button(style=ButtonStyle.gray, label="Tube", emoji="‚ñ∂"),
                 Button(style=ButtonStyle.gray, label="Poker", emoji="üÉè"),
                 Button(style=ButtonStyle.gray, label="Doodle", emoji="üñåÔ∏è")],
                [Button(style=ButtonStyle.gray, label="Chance", emoji="üé≤"),
                 Button(style=ButtonStyle.gray, label="Ask", emoji="‚ùì"),
                 Button(style=ButtonStyle.gray, label="Clear 10 messages", emoji="üßπ")],
            ],
        )

        response = await bot.wait_for("button_click")
        if response.channel == ctx.channel:
            if response.component.label == "Tube":
                data = {
                    "max_age": 86400,
                    "max_uses": 0,
                    "target_application_id": 755600276941176913,  # YouTube
                    "target_type": 2,
                    "temporary": False,
                    "validate": None
                }
                headers = {
                    "Authorization": "Bot {0}".format(Token),
                    "Content-type": "application/json"
                }

                if ctx.author.voice is not None:
                    if ctx.author.voice.channel is not None:
                        channel = ctx.author.voice.channel.id
                    else:
                        await ctx.channel.purge(limit=2)
                        await ctx.send("Please, join on the channel!")
                        await response.edit_origin()
                else:
                    await ctx.channel.purge(limit=2)
                    await ctx.send("Please, join on the channel!")
                    await response.edit_origin()

                responses = requests.post(f'https://discord.com/api/v8/channels/{channel}/invites',
                                          data=json.dumps(data),
                                          headers=headers)
                link = json.loads(responses.content)

                await ctx.channel.purge(limit=2)
                await ctx.send(f'{author.mention}' + " " + f"https://discord.com/invite/{link['code']}")
                await response.edit_origin()

            elif response.component.label == "Poker":
                data = {
                    "max_age": 86400,
                    "max_uses": 0,
                    "target_application_id": 755827207812677713,  # Poker
                    "target_type": 2,
                    "temporary": False,
                    "validate": None
                }
                headers = {
                    "Authorization": "Bot {0}".format(Token),
                    "Content-type": "application/json"
                }

                if ctx.author.voice is not None:
                    if ctx.author.voice.channel is not None:
                        channel = ctx.author.voice.channel.id
                    else:
                        await ctx.channel.purge(limit=2)
                        await ctx.send("Please, join on the channel!")
                        await response.edit_origin()
                else:
                    await ctx.channel.purge(limit=2)
                    await ctx.send("Please, join on the channel!")
                    await response.edit_origin()

                responses = requests.post(f'https://discord.com/api/v8/channels/{channel}/invites',
                                          data=json.dumps(data),
                                          headers=headers)
                link = json.loads(responses.content)

                await ctx.channel.purge(limit=2)
                await ctx.send(f'{author.mention}' + " " + f"https://discord.com/invite/{link['code']}")
                await response.edit_origin()

            elif response.component.label == "Doodle":
                data = {
                    "max_age": 86400,
                    "max_uses": 0,
                    "target_application_id": 878067389634314250,  # Doodle
                    "target_type": 2,
                    "temporary": False,
                    "validate": None
                }
                headers = {
                    "Authorization": "Bot {0}".format(Token),
                    "Content-type": "application/json"
                }

                if ctx.author.voice is not None:
                    if ctx.author.voice.channel is not None:
                        channel = ctx.author.voice.channel.id
                    else:
                        await ctx.channel.purge(limit=2)
                        await ctx.send("Please, join on the channel!")
                        await response.edit_origin()
                else:
                    await ctx.channel.purge(limit=2)
                    await ctx.send("Please, join on the channel!")
                    await response.edit_origin()

                responses = requests.post(f'https://discord.com/api/v8/channels/{channel}/invites',
                                          data=json.dumps(data),
                                          headers=headers)
                link = json.loads(responses.content)

                await ctx.channel.purge(limit=2)
                await ctx.send(f'{author.mention}' + " " + f"https://discord.com/invite/{link['code']}")
                await response.edit_origin()

            elif response.component.label == "Clear 10 messages":
                messages = await ctx.channel.purge(limit=10)  # –ø—É—Ä–¥–∂–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è, +1 —Ç.–∫. –Ω–∞—à–µ —Ç–æ–∂–µ —É–¥–∞–ª–∏—Ç—Å—è
                await ctx.channel.purge(limit=2)
                await ctx.send(f"{len(messages)} messages were deleted")  # –æ–ø–æ–≤–µ—â—è–µ–º –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–æ–æ–±—â–µ–Ω–∏–π
                await response.edit_origin()

            elif response.component.label == "Chance":
                author = ctx.message.author  # –ø–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
                ran = random.randint(0, 100)  # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 100 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
                await ctx.channel.purge(limit=2)
                await ctx.send(
                    f' {author.mention}' + ", " + str(ran) + "%")  # —à–ª–µ–º –≤ —á–∞—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É–ø–æ–º–∏–Ω–∞—è –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                await response.edit_origin()

            elif response.component.label == "Ask":
                ans = ['yes', 'no']  # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫, –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                author = ctx.message.author  # –ø–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
                onezero = random.randint(0,
                                         1)  # –ø–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã—Ç–∞—â–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
                await ctx.channel.purge(limit=2)
                await ctx.send(f'{author.mention}' + ", " + ans[onezero])  # —à–ª—ë–º –≤ —á–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
                await response.edit_origin()


def setup(bot):
    bot.add_cog(menu(bot=bot))
